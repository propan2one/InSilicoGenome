:mod:`insilicogenome.insilicogenome`
====================================

.. py:module:: insilicogenome.insilicogenome


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   insilicogenome.insilicogenome.random_dnasequence
   insilicogenome.insilicogenome.replace_start_codons
   insilicogenome.insilicogenome.write_fasta_genome



.. function:: random_dnasequence(size)

   Generate random sequence of DNA

   :param size: An integer between 1 and 100 000 000.
   :type size: Size of DNA in bp

   :returns: A string corresponding to DNA sequence.
   :rtype: string

   .. rubric:: Examples

   >>> from insilicogenome import insilicogenome
   >>> insilicogenome.random_dnasequence(10)
   'GTTCTTGAT'


.. function:: replace_start_codons(sequence, codon_start_array=['ATG', 'CAT', 'TTG', 'CAA', 'CTG', 'CAG'])

   Replace all the occurence of initiation codon by random sequence {ATG & CAT, TTG & CAA, CTG & CAG}.
   The CAT, CAA, CAG are the reverse complement sequence of classical start codon

   :param sequence: A string generated by random_dnasequence
   :type sequence: A sequence of DNA between 1 and 100 000 000bp

   :returns: A string corresponding to DNA sequence without start codons.
   :rtype: string

   .. rubric:: Examples

   >>> from insilicogenome import insilicogenome
   >>> insilicogenome.replace_start_codons("GTTCTTGAT")
   'GTTCCCCAT'


.. function:: write_fasta_genome(output, sequence)

   Writes name/sequence to file in FASTA format

   :param output: A string containing the path
   :type output: The name of the header and fasta file
   :param sequence: A string generated by random_dnasequence
   :type sequence: A sequence of DNA between 1 and 100 000 000bp

   :returns:
   :rtype: None

   .. rubric:: Examples

   >>> from insilicogenome import insilicogenome
   >>> insilicogenome.write_fasta_genome(/path/genome.fasta, 'GTTCTTGAT')


